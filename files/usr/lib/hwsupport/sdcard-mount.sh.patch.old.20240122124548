--- stable/usr/lib/hwsupport/sdcard-mount.sh	2022-09-26 21:29:52.000000000 +0200
+++ work/usr/lib/hwsupport/sdcard-mount.sh	2024-01-22 13:45:48.116887993 +0100
@@ -61,26 +61,65 @@
 
     /bin/mkdir -p -- "${MOUNT_POINT}"
 
-    # Global mount options
-    OPTS="rw,noatime"
-
-    # File system type specific mount options
-    #if [[ ${ID_FS_TYPE} == "vfat" ]]; then
-    #    OPTS+=",users,gid=100,umask=000,shortname=mixed,utf8=1,flush"
-    #fi
-
-    # We need symlinks for Steam for now, so only automount ext4 as that'll Steam will format right now
-    if [[ ${ID_FS_TYPE} != "ext4" ]]; then
+    #### SteamOS Btrfs Begin ####
+    if [[ -f /etc/default/steamos-btrfs ]]; then
+        source /etc/default/steamos-btrfs
+    fi
+    if [[ "${ID_FS_TYPE}" == "ext4" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_EXT4_MOUNT_OPTS:-rw,noatime,lazytime}"
+    elif [[ "${ID_FS_TYPE}" == "f2fs" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_F2FS_MOUNT_OPTS:-rw,noatime,lazytime,compress_algorithm=zstd,compress_chksum,atgc,gc_merge}"
+    elif [[ "${ID_FS_TYPE}" == "btrfs" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_BTRFS_MOUNT_OPTS:-rw,noatime,lazytime,compress-force=zstd,space_cache=v2,autodefrag,ssd_spread,nodiscard}"
+    elif [[ "${ID_FS_TYPE}" == "vfat" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_FAT_MOUNT_OPTS:-rw,noatime,lazytime,uid=1000,gid=1000,utf8=1}"
+    elif [[ "${ID_FS_TYPE}" == "exfat" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_EXFAT_MOUNT_OPTS:-rw,noatime,lazytime,uid=1000,gid=1000}"
+    elif [[ "${ID_FS_TYPE}" == "ntfs" ]]; then
+        OPTS="${STEAMOS_BTRFS_SDCARD_NTFS_MOUNT_OPTS:-rw,noatime,lazytime,uid=1000,gid=1000,big_writes,umask=0022,ignore_case,windows_names}"
+        EXTRA_OPTS="-t lowntfs-3g"
+    else
         echo "Error mounting ${DEVICE}: wrong fstype: ${ID_FS_TYPE} - ${dev_json}"
         exit 2
     fi
 
-    if ! /bin/mount -o "${OPTS}" -- "${DEVICE}" "${MOUNT_POINT}"; then
+    if ! /bin/mount -o "${OPTS}" ${EXTRA_OPTS} -- "${DEVICE}" "${MOUNT_POINT}"; then
         echo "Error mounting ${DEVICE} (status = $?)"
         /bin/rmdir -- "${MOUNT_POINT}"
         exit 1
     fi
 
+    if [[ "${ID_FS_TYPE}" == "btrfs" ]]; then
+        # Check if there's a subvolume @ and use that as root of the drive
+        if [[ -d "${MOUNT_POINT}/${STEAMOS_BTRFS_SDCARD_BTRFS_MOUNT_SUBVOL:-@}" ]] && btrfs subvolume show "${MOUNT_POINT}/${STEAMOS_BTRFS_SDCARD_BTRFS_MOUNT_SUBVOL:-@}" &>/dev/null; then
+            /bin/umount -l -- "${MOUNT_POINT}"
+            OPTS+=",subvol=${STEAMOS_BTRFS_SDCARD_BTRFS_MOUNT_SUBVOL:-@}"
+            if ! /bin/mount -o "${OPTS}" ${EXTRA_OPTS} -- "${DEVICE}" "${MOUNT_POINT}"; then
+                echo "Error mounting ${DEVICE} (status = $?)"
+                /bin/rmdir -- "${MOUNT_POINT}"
+                exit 1
+            fi
+        fi
+        # Workaround for for Steam compression bug
+        for d in "${MOUNT_POINT}"/steamapps/{downloading,temp} ; do
+            if ! btrfs subvolume show "$d" &>/dev/null; then
+                mkdir -p "$d"
+                rm -rf "$d"
+                btrfs subvolume create "$d"
+                chattr +C "$d"
+                chown 1000:1000 "${d%/*}" "$d"
+            fi
+        done
+    elif [[ "${STEAMOS_BTRFS_SDCARD_COMPATDATA_BIND_MOUNT:-0}" == "1" ]] && [[ "${ID_FS_TYPE}" == "vfat" || "${ID_FS_TYPE}" == "exfat" || "${ID_FS_TYPE}" == "ntfs" ]]; then
+        # bind mount compatdata folder from internal disk
+        mkdir -p "${MOUNT_POINT}"/steamapps/compatdata
+        chown 1000:1000 "${MOUNT_POINT}"/steamapps{,/compatdata}
+        mkdir -p /home/deck/.local/share/Steam/steamapps/compatdata
+        chown 1000:1000 /home/deck/.local{,/share{,/Steam{,/steamapps{,/compatdata}}}}
+        /bin/mount --rbind /home/deck/.local/share/Steam/steamapps/compatdata "${MOUNT_POINT}"/steamapps/compatdata
+    fi
+    #### SteamOS Btrfs End ####
+
     chown 1000:1000 -- "${MOUNT_POINT}"
 
     echo "**** Mounted ${DEVICE} at ${MOUNT_POINT} ****"
@@ -109,6 +148,11 @@
     if [[ -z ${MOUNT_POINT} ]]; then
         echo "Warning: ${DEVICE} is not mounted"
     else
+        #### SteamOS Btrfs Begin ####
+        if mountpoint -q "${MOUNT_POINT}"/steamapps/compatdata; then
+            /bin/umount -l -R "${MOUNT_POINT}"/steamapps/compatdata
+        fi
+        #### SteamOS Btrfs End ####
         /bin/umount -l -- "${DEVICE}"
         echo "**** Unmounted ${DEVICE}"
     fi
